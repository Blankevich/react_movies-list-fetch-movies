{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","query","setQuery","setMovie","loading","setLoading","error","setError","onSubmit","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","response","Promise","reject","Poster","Title","Plot","imdbID","resolve","finally","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","App","newMovie","some","prevMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc7fc3df.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addMovie: (movie: Movie) => void,\n}\n\nexport const FindMovie: React.FC<Props> = (\n  { addMovie },\n) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie>();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const handlSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setLoading(true);\n\n    getMovie(query)\n      .then(response => {\n        if ('Error' in response) {\n          return Promise.reject();\n        }\n\n        const {\n          Poster,\n          Title,\n          Plot,\n          imdbID,\n        } = response as MovieData;\n\n        setMovie({\n          title: Title,\n          description: Plot,\n          imgUrl: Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : Poster,\n          imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n          imdbId: imdbID,\n        });\n\n        return Promise.resolve();\n      }).catch(() => setError(true))\n      .finally(() => setLoading(false));\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handlSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setError(false);\n              }}\n            />\n          </div>\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': loading,\n              })}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  addMovie(movie);\n                  setQuery('');\n                  setError(false);\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n\n        </div>\n      </form>\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=a6af1ee4';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovie] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    const alreadyExist = movies.some(movie => movie.imdbId === newMovie.imdbId);\n\n    if (!alreadyExist) {\n      setMovie(prevMovie => [...prevMovie, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}